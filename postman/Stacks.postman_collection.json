{
	"info": {
		"_postman_id": "f3479d2e-dcc0-4a82-8e52-755707e5d12a",
		"name": "Stacks",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Ping",
			"item": [
				{
					"name": "Ping",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Ping status test\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Ping pong\", function () {",
									"    const responseJson = pm.response.json();",
									"    pm.expect(responseJson.data).to.equal(\"pong\");",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{server}}/ping",
							"host": [
								"{{server}}"
							],
							"path": [
								"ping"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "User",
			"item": [
				{
					"name": "User registration",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = pm.response.json();",
									"pm.environment.set(\"user\", jsonData.data);",
									"",
									"pm.test(\"Registration status test\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"email\": \"{{testUserUsername}}\",\n\t\"password\": \"{{testUserPassword}}\",\n    \"firstName\": \"Lorem\",\n    \"lastName\": \"Ipsum\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{server}}/register",
							"host": [
								"{{server}}"
							],
							"path": [
								"register"
							]
						}
					},
					"response": []
				},
				{
					"name": "Login",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = pm.response.json();",
									"pm.environment.set(\"authToken\", \"Bearer \" + jsonData.data.token);",
									"",
									"pm.test(\"Login status test\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Login user test\", function () {",
									"    const responseJson = pm.response.json();",
									"    const user = pm.environment.get(\"user\");",
									"    pm.expect(responseJson.data.id).is.equal(`${user}`);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"email\": \"{{testUserUsername}}\",\n\t\"password\": \"{{testUserPassword}}\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{server}}/login",
							"host": [
								"{{server}}"
							],
							"path": [
								"login"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get all Members",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Get members status test\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Get members results\", function () {",
									"    const responseJson = pm.response.json();",
									"    const length = responseJson.data.length > 0;",
									"    pm.expect(length).to.be.true;",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "{{authToken}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{server}}/api/{{ver}}/members",
							"host": [
								"{{server}}"
							],
							"path": [
								"api",
								"{{ver}}",
								"members"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Documents",
			"item": [
				{
					"name": "Add Folder",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = pm.response.json();",
									"pm.environment.set(\"folder\", jsonData.data.id);",
									"",
									"pm.test(\"Add folder status test\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Add folder response\", function () {",
									"    const responseJson = pm.response.json();",
									"    pm.expect(responseJson.data).to.be.an(\"object\");",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "{{authToken}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"text\": \"New Folder\",\n  \"data\": {\n    \"created\": \"2021-04-20T08:32:25.998Z\",\n    \"type\": \"folder\"\n  }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{server}}/api/{{ver}}/documents",
							"host": [
								"{{server}}"
							],
							"path": [
								"api",
								"{{ver}}",
								"documents"
							]
						}
					},
					"response": []
				},
				{
					"name": "Add Generic Document",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = pm.response.json();",
									"pm.environment.set(\"document\", jsonData.data.id);",
									"",
									"pm.test(\"Add document (Generic) status test\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Add document (Generic) response\", function () {",
									"    const responseJson = pm.response.json();",
									"    pm.expect(responseJson.data).to.be.an(\"object\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "{{authToken}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"text\": \"New Document\",\n  \"parent\": 0,\n  \"data\": {\n    \"type\": \"project\"\n  }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{server}}/api/{{ver}}/documents",
							"host": [
								"{{server}}"
							],
							"path": [
								"api",
								"{{ver}}",
								"documents"
							]
						}
					},
					"response": []
				},
				{
					"name": "Add People",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Add document (People) status test\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Add document (People) response\", function () {",
									"    const responseJson = pm.response.json();",
									"    pm.expect(responseJson.data).to.be.an(\"object\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "{{authToken}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"text\": \"New People\",\n  \"parent\": 0,\n  \"data\": {\n    \"type\": \"people\"\n  }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{server}}/api/{{ver}}/documents",
							"host": [
								"{{server}}"
							],
							"path": [
								"api",
								"{{ver}}",
								"documents"
							]
						}
					},
					"response": []
				},
				{
					"name": "Add Notepad",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Add document (Notepad) status test\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Add document (Notepad) response\", function () {",
									"    const responseJson = pm.response.json();",
									"    pm.expect(responseJson.data).to.be.an(\"object\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "{{authToken}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"text\": \"New Notepad\",\n  \"parent\": 0,\n  \"data\": {\n    \"type\": \"notepad\"\n  }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{server}}/api/{{ver}}/documents",
							"host": [
								"{{server}}"
							],
							"path": [
								"api",
								"{{ver}}",
								"documents"
							]
						}
					},
					"response": []
				},
				{
					"name": "Add Project",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = pm.response.json();",
									"pm.environment.set(\"project\", jsonData.data.id);",
									"",
									"pm.test(\"Add document (Project) status test\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Add document (Project) response\", function () {",
									"    const responseJson = pm.response.json();",
									"    pm.expect(responseJson.data).to.be.an(\"object\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "{{authToken}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"text\": \"New Project\",\n  \"parent\": 0,\n  \"data\": {\n    \"type\": \"project\"\n  }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{server}}/api/{{ver}}/documents",
							"host": [
								"{{server}}"
							],
							"path": [
								"api",
								"{{ver}}",
								"documents"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Single Document",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Get Single Document status test\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"const currentDocumentId = pm.environment.get(\"document\");",
									"pm.test(\"Get Single Document response\", function () {",
									"    const responseJson = pm.response.json();",
									"    pm.expect(responseJson.data).to.be.an(\"object\");",
									"});",
									"",
									"pm.test(\"Get Single Document response ID\", function () {",
									"    const responseJson = pm.response.json();",
									"    pm.expect(responseJson.data.id).to.equal(currentDocumentId);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "{{authToken}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{server}}/api/{{ver}}/documents/{{project}}",
							"host": [
								"{{server}}"
							],
							"path": [
								"api",
								"{{ver}}",
								"documents",
								"{{project}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get All Documents",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = pm.response.json();",
									"pm.environment.set(\"folder\", jsonData.data.id);",
									"",
									"pm.test(\"Get All Documents status test\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Get All Documents response\", function () {",
									"    const responseJson = pm.response.json();",
									"    pm.expect(responseJson.data).to.be.an(\"object\");",
									"});",
									"",
									"pm.test(\"Get All Documents response structure\", function () {",
									"    const responseJson = pm.response.json();",
									"    const data = responseJson.data;",
									"",
									"    let valid = data.hasOwnProperty(\"documents\");",
									"    // valid.expect(data.documents).to.be.an(\"array\");",
									"    valid = data.hasOwnProperty(\"tags\");",
									"    valid = data.hasOwnProperty(\"statuses\");",
									"",
									"    pm.expect(valid).to.eql(true);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "{{authToken}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{server}}/api/{{ver}}/documents",
							"host": [
								"{{server}}"
							],
							"path": [
								"api",
								"{{ver}}",
								"documents"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update Document",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Update Document status test\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Authorization",
								"value": "{{authToken}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"text\": \"New title\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{server}}/api/{{ver}}/documents/{{project}}",
							"host": [
								"{{server}}"
							],
							"path": [
								"api",
								"{{ver}}",
								"documents",
								"{{project}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Reorder Documents",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Reorder documents status\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Reorder documents\", function () {",
									"    const responseJson = pm.response.json();",
									"    pm.expect(responseJson.data).to.equal(true);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "{{authToken}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"c9da620c-d4e9-429a-9a6b-e3f6d8d1f9f7\": [\n    \"d9da620c-d4e9-429a-9a6b-e3f6d8d1f9f7\",\n    \"w9da620c-d4e9-429a-9a6b-e3f6d8d1f9f7\"\n  ]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{server}}/api/{{ver}}/documents/order",
							"host": [
								"{{server}}"
							],
							"path": [
								"api",
								"{{ver}}",
								"documents",
								"order"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update Options",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Update Document Options status test\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Authorization",
								"value": "{{authToken}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"feeCurrency\":\"USD\",\n    \"archivedOrder\":\"archived-asc\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{server}}/api/{{ver}}/documents/{{project}}/options",
							"host": [
								"{{server}}"
							],
							"path": [
								"api",
								"{{ver}}",
								"documents",
								"{{project}}",
								"options"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Document attachments",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Get Document Attachments status test\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "{{authToken}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{server}}/api/{{ver}}/documents/{{project}}/attachments",
							"host": [
								"{{server}}"
							],
							"path": [
								"api",
								"{{ver}}",
								"documents",
								"{{project}}",
								"attachments"
							]
						}
					},
					"response": []
				},
				{
					"name": "Toggle Visibility (Public/Private)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Update Document Visibility status test\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Update Document Visibility status response\", function () {",
									"    const responseJson = pm.response.json();",
									"    pm.expect(responseJson.data).to.be.equal(true);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Authorization",
								"value": "{{authToken}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"public\": 0\n}",
							"options": {
								"raw": {
									"language": "javascript"
								}
							}
						},
						"url": {
							"raw": "{{server}}/api/{{ver}}/documents/{{project}}",
							"host": [
								"{{server}}"
							],
							"path": [
								"api",
								"{{ver}}",
								"documents",
								"{{project}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete Document/Folder",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Delete document status test\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Authorization",
								"value": "{{authToken}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{server}}/api/{{ver}}/documents/{{document}}",
							"host": [
								"{{server}}"
							],
							"path": [
								"api",
								"{{ver}}",
								"documents",
								"{{document}}"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Permissions",
			"item": [
				{
					"name": "Get Resource Permission",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Get Resource Permission status test\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Get Resource Permission response\", function () {",
									"    const responseJson = pm.response.json();",
									"    pm.expect(responseJson.data).to.be.an(\"object\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "{{authToken}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{server}}/api/{{ver}}/permissions/{{project}}",
							"host": [
								"{{server}}"
							],
							"path": [
								"api",
								"{{ver}}",
								"permissions",
								"{{project}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Add a Permission",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Add a User Permission status test\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Add a User Permission response\", function () {",
									"    const responseJson = pm.response.json();",
									"    pm.expect(responseJson.data).to.be.eql(true);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "{{authToken}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"resource\": \"{{project}}\",\n    \"permission\": \"FULL\",\n    \"type\": \"DOCUMENT\",\n    \"user\": {{user}}\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{server}}/api/{{ver}}/permissions",
							"host": [
								"{{server}}"
							],
							"path": [
								"api",
								"{{ver}}",
								"permissions"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Resource Users Permissions",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Get Users Permission for Resource status test\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Get Users Permission for Resource response\", function () {",
									"    const responseJson = pm.response.json();",
									"    pm.expect(responseJson.data).to.be.an(\"array\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "{{authToken}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{server}}/api/{{ver}}/permissions/{{project}}/users",
							"host": [
								"{{server}}"
							],
							"path": [
								"api",
								"{{ver}}",
								"permissions",
								"{{project}}",
								"users"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update a Users Permission",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Update a Users Permission status test\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Update a Users Permission response\", function () {",
									"    const responseJson = pm.response.json();",
									"    pm.expect(responseJson.data).to.be.eql(true);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Authorization",
								"value": "{{authToken}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"permission\": \"FULL\",\n    \"user\": {{user}}\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{server}}/api/{{ver}}/permissions/{{project}}",
							"host": [
								"{{server}}"
							],
							"path": [
								"api",
								"{{ver}}",
								"permissions",
								"{{project}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete a User Permission",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Delete a Users Permission status test\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Delete a Users Permission response\", function () {",
									"    const responseJson = pm.response.json();",
									"    pm.expect(responseJson.data).to.be.eql(true);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Authorization",
								"value": "{{authToken}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{server}}/api/{{ver}}/permissions/{{project}}/users/{{user}}",
							"host": [
								"{{server}}"
							],
							"path": [
								"api",
								"{{ver}}",
								"permissions",
								"{{project}}",
								"users",
								"{{user}}"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Projects",
			"item": [
				{
					"name": "Stacks",
					"item": [
						{
							"name": "Add Stack",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var jsonData = pm.response.json();",
											"pm.environment.set(\"stack\", jsonData.data.id);",
											"",
											"pm.test(\"Add Stack status test\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"Add Stack response\", function () {",
											"    const responseJson = pm.response.json();",
											"    pm.expect(responseJson.data).to.be.an(\"object\");",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "{{authToken}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"title\": \"To Do\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{server}}/api/{{ver}}/projects/{{project}}/stacks",
									"host": [
										"{{server}}"
									],
									"path": [
										"api",
										"{{ver}}",
										"projects",
										"{{project}}",
										"stacks"
									]
								}
							},
							"response": []
						},
						{
							"name": "Update Stack",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Update Stack status test\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"Update Stack response\", function () {",
											"    const responseJson = pm.response.json();",
											"    pm.expect(responseJson.data).to.be.equal(true);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Authorization",
										"value": "{{authToken}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"title\": \"Updated Stack\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{server}}/api/{{ver}}/stacks/{{stack}}",
									"host": [
										"{{server}}"
									],
									"path": [
										"api",
										"{{ver}}",
										"stacks",
										"{{stack}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get a Stack",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Get a Stack status test\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"Get a Stack response\", function () {",
											"    const responseJson = pm.response.json();",
											"    pm.expect(responseJson.data.title).to.be.equal(\"Updated Stack\");",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "{{authToken}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{server}}/api/{{ver}}/stacks/{{stack}}",
									"host": [
										"{{server}}"
									],
									"path": [
										"api",
										"{{ver}}",
										"stacks",
										"{{stack}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Mark all task as Done",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Mark all task as Done status test\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"Mark all task as Done response\", function () {",
											"    const responseJson = pm.response.json();",
											"    pm.expect(responseJson.data).to.be.equal(true);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "{{authToken}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{server}}/api/{{ver}}/stacks/{{stack}}/done",
									"host": [
										"{{server}}"
									],
									"path": [
										"api",
										"{{ver}}",
										"stacks",
										"{{stack}}",
										"done"
									]
								}
							},
							"response": []
						},
						{
							"name": "Mark all tasks as To Do",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Mark all task as To Do status test\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"Mark all task as To Do response\", function () {",
											"    const responseJson = pm.response.json();",
											"    pm.expect(responseJson.data).to.be.equal(true);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "{{authToken}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{server}}/api/{{ver}}/stacks/{{stack}}/todo",
									"host": [
										"{{server}}"
									],
									"path": [
										"api",
										"{{ver}}",
										"stacks",
										"{{stack}}",
										"todo"
									]
								}
							},
							"response": []
						},
						{
							"name": "Archive All tasks",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Archive All status test\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"Archive All response\", function () {",
											"    const responseJson = pm.response.json();",
											"    pm.expect(responseJson.data).to.be.equal(true);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "{{authToken}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{server}}/api/{{ver}}/stacks/{{stack}}/archive-all",
									"host": [
										"{{server}}"
									],
									"path": [
										"api",
										"{{ver}}",
										"stacks",
										"{{stack}}",
										"archive-all"
									]
								}
							},
							"response": []
						},
						{
							"name": "Archive done tasks",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Archive Done status test\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"Archive Done response\", function () {",
											"    const responseJson = pm.response.json();",
											"    pm.expect(responseJson.data).to.be.equal(true);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "{{authToken}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{server}}/api/{{ver}}/stacks/{{stack}}/archive-done",
									"host": [
										"{{server}}"
									],
									"path": [
										"api",
										"{{ver}}",
										"stacks",
										"{{stack}}",
										"archive-done"
									]
								}
							},
							"response": []
						},
						{
							"name": "Order Stack",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Order Stack status test\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"Order Stack response\", function () {",
											"    const responseJson = pm.response.json();",
											"    pm.expect(responseJson.data).to.be.equal(true);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "{{authToken}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"stack\": \"{{stack}}\",\n    \"position\": 0\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{server}}/api/{{ver}}/projects/{{project}}/order-stack",
									"host": [
										"{{server}}"
									],
									"path": [
										"api",
										"{{ver}}",
										"projects",
										"{{project}}",
										"order-stack"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Tasks",
					"item": [
						{
							"name": "Add Task",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var jsonData = pm.response.json();",
											"pm.environment.set(\"task\", jsonData.data.id);",
											"",
											"pm.test(\"Add Task status test\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"Add Task response\", function () {",
											"    const responseJson = pm.response.json();",
											"    pm.expect(responseJson.data).to.be.an(\"object\");",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "{{authToken}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"title\": \"New task\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{server}}/api/{{ver}}/stacks/{{stack}}/tasks",
									"host": [
										"{{server}}"
									],
									"path": [
										"api",
										"{{ver}}",
										"stacks",
										"{{stack}}",
										"tasks"
									]
								}
							},
							"response": []
						},
						{
							"name": "Add Task to TOP",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Add Task to Top status test\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"Add Task to Top  response\", function () {",
											"    const responseJson = pm.response.json();",
											"    pm.expect(responseJson.data).to.be.an(\"object\");",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "{{authToken}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"title\": \"New task\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{server}}/api/{{ver}}/stacks/{{stack}}/tasks?position=top",
									"host": [
										"{{server}}"
									],
									"path": [
										"api",
										"{{ver}}",
										"stacks",
										"{{stack}}",
										"tasks"
									],
									"query": [
										{
											"key": "position",
											"value": "top"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Update Task",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Update Task status test\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"Update Task response\", function () {",
											"    const responseJson = pm.response.json();",
											"    pm.expect(responseJson.data).to.be.equal(true);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Authorization",
										"value": "{{authToken}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n\t\"title\": \"Updated task\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{server}}/api/{{ver}}/tasks/{{task}}",
									"host": [
										"{{server}}"
									],
									"path": [
										"api",
										"{{ver}}",
										"tasks",
										"{{task}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get Single Task",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Get Task status test\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"pm.test(\"Get Task response\", function () {",
											"    const responseJson = pm.response.json();",
											"    pm.expect(responseJson.data).to.be.an(\"object\");",
											"});",
											"",
											"pm.test(\"Get Task response 2\", function () {",
											"    const responseJson = pm.response.json();",
											"    pm.expect(responseJson.data.title).to.be.equal(\"Updated task\");",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "{{authToken}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{server}}/api/{{ver}}/tasks/{{task}}",
									"host": [
										"{{server}}"
									],
									"path": [
										"api",
										"{{ver}}",
										"tasks",
										"{{task}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "Get Task watchers",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Get Task watchers status test\", function () {",
											"    pm.response.to.have.status(200);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "{{authToken}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{server}}/api/{{ver}}/tasks/{{task}}/watchers",
									"host": [
										"{{server}}"
									],
									"path": [
										"api",
										"{{ver}}",
										"tasks",
										"{{task}}",
										"watchers"
									]
								}
							},
							"response": []
						},
						{
							"name": "Add Task watcher",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Add Task watcher status test\", function () {",
											"    pm.response.to.have.status(200);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "{{authToken}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{server}}/api/{{ver}}/tasks/{{task}}/watch",
									"host": [
										"{{server}}"
									],
									"path": [
										"api",
										"{{ver}}",
										"tasks",
										"{{task}}",
										"watch"
									]
								}
							},
							"response": []
						},
						{
							"name": "Remove Task watcher",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Remove Task watcher status test\", function () {",
											"    pm.response.to.have.status(200);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "{{authToken}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{server}}/api/{{ver}}/tasks/{{task}}/unwatch",
									"host": [
										"{{server}}"
									],
									"path": [
										"api",
										"{{ver}}",
										"tasks",
										"{{task}}",
										"unwatch"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Get Order",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "{{authToken}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{server}}/api/{{ver}}/projects/{{project}}/order",
							"host": [
								"{{server}}"
							],
							"path": [
								"api",
								"{{ver}}",
								"projects",
								"{{project}}",
								"order"
							]
						}
					},
					"response": []
				},
				{
					"name": "Set Tasks Order",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Set Task Order status test\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Set Task Order response\", function () {",
									"    const responseJson = pm.response.json();",
									"    pm.expect(responseJson.data).to.be.equal(true);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "{{authToken}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"task\": \"{{task}}\",\n\t\"stack\": \"{{stack}}\",\n    \"position\": 0\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{server}}/api/{{ver}}/projects/{{project}}/order-task",
							"host": [
								"{{server}}"
							],
							"path": [
								"api",
								"{{ver}}",
								"projects",
								"{{project}}",
								"order-task"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete Task",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Authorization",
								"value": "{{authToken}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{server}}/api/{{ver}}/tasks/{{task}}",
							"host": [
								"{{server}}"
							],
							"path": [
								"api",
								"{{ver}}",
								"tasks",
								"{{task}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete Stack",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Delete Stack status test\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Delete Stack response\", function () {",
									"    const responseJson = pm.response.json();",
									"    pm.expect(responseJson.data).to.be.equal(true);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Authorization",
								"value": "{{authToken}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{server}}/api/{{ver}}/stacks/{{stack}}",
							"host": [
								"{{server}}"
							],
							"path": [
								"api",
								"{{ver}}",
								"stacks",
								"{{stack}}"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Files",
			"item": [
				{
					"name": "Upload attachment - only in the client",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "{{authToken}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "attachment",
									"type": "file",
									"src": "/Users/cristian/Downloads/Group 10.png"
								},
								{
									"key": "test",
									"value": "Hello world",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{server}}/api/{{ver}}/upload/{{task}}",
							"host": [
								"{{server}}"
							],
							"path": [
								"api",
								"{{ver}}",
								"upload",
								"{{task}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Attach link",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "{{authToken}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"title\": \"Stacks\",\n    \"url\": \"https://stacks.rocks\"\n}",
							"options": {
								"raw": {
									"language": "javascript"
								}
							}
						},
						"url": {
							"raw": "{{server}}/api/{{ver}}/link/{{task}}",
							"host": [
								"{{server}}"
							],
							"path": [
								"api",
								"{{ver}}",
								"link",
								"{{task}}"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Tags",
			"item": [
				{
					"name": "Get All Tags",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Get All Tags status test\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Get All Tags response\", function () {",
									"    const responseJson = pm.response.json();",
									"    pm.expect(responseJson.data).to.be.an(\"array\");",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "{{authToken}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{server}}/api/{{ver}}/tags",
							"host": [
								"{{server}}"
							],
							"path": [
								"api",
								"{{ver}}",
								"tags"
							]
						}
					},
					"response": []
				},
				{
					"name": "Add Global Tag",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = pm.response.json();",
									"pm.environment.set(\"tag\", jsonData.data.id);",
									"",
									"pm.test(\"Add Global Tag status test\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Add Global tag response\", function () {",
									"    const responseJson = pm.response.json();",
									"    pm.expect(responseJson.data).to.be.an(\"object\");",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "{{authToken}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"title\": \"New Tag\",\n\t\"color\": \"#000000\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{server}}/api/{{ver}}/tags",
							"host": [
								"{{server}}"
							],
							"path": [
								"api",
								"{{ver}}",
								"tags"
							]
						}
					},
					"response": []
				},
				{
					"name": "Add Project Tag",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = pm.response.json();",
									"pm.environment.set(\"tag\", jsonData.data.id);",
									"",
									"pm.test(\"Add Project Tag status test\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Add Project Tag response\", function () {",
									"    const responseJson = pm.response.json();",
									"    pm.expect(responseJson.data).to.be.an(\"object\");",
									"});",
									"",
									"pm.test(\"Add Project Tag response 2\", function () {",
									"    const responseJson = pm.response.json();",
									"    pm.expect(responseJson.data.project).to.be.not.equal(null);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "{{authToken}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"title\": \"New Tag\",\n\t\"color\": \"#000000\",\n    \"project\": \"{{project}}\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{server}}/api/{{ver}}/tags",
							"host": [
								"{{server}}"
							],
							"path": [
								"api",
								"{{ver}}",
								"tags"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update Tag",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Update Tag status test\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Authorization",
								"value": "{{authToken}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"title\": \"Updated Tag\",\n\t\"color\": \"#ffffff\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{server}}/api/{{ver}}/tags/{{tag}}",
							"host": [
								"{{server}}"
							],
							"path": [
								"api",
								"{{ver}}",
								"tags",
								"{{tag}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete Tag",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Delete Tag status test\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Authorization",
								"value": "{{authToken}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{server}}/api/{{ver}}/tags/{{tag}}",
							"host": [
								"{{server}}"
							],
							"path": [
								"api",
								"{{ver}}",
								"tags",
								"{{tag}}"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Statuses",
			"item": [
				{
					"name": "Get All Statuses",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Get All Statuses status test\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Get All Statuses response\", function () {",
									"    const responseJson = pm.response.json();",
									"    pm.expect(responseJson.data).to.be.an(\"array\");",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "{{authToken}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{server}}/api/{{ver}}/statuses",
							"host": [
								"{{server}}"
							],
							"path": [
								"api",
								"{{ver}}",
								"statuses"
							]
						}
					},
					"response": []
				},
				{
					"name": "Add Global Status",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = pm.response.json();",
									"pm.environment.set(\"status\", jsonData.data.id);",
									"",
									"pm.test(\"Add Global Status status test\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Add Global Status response\", function () {",
									"    const responseJson = pm.response.json();",
									"    pm.expect(responseJson.data).to.be.an(\"object\");",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "{{authToken}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"title\": \"New Status\",\n\t\"color\": \"#000000\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{server}}/api/{{ver}}/statuses",
							"host": [
								"{{server}}"
							],
							"path": [
								"api",
								"{{ver}}",
								"statuses"
							]
						}
					},
					"response": []
				},
				{
					"name": "Add Project Status",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsonData = pm.response.json();",
									"pm.environment.set(\"status\", jsonData.data.id);",
									"",
									"pm.test(\"Add Project Status status test\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Add Project Status response\", function () {",
									"    const responseJson = pm.response.json();",
									"    pm.expect(responseJson.data).to.be.an(\"object\");",
									"});",
									"",
									"pm.test(\"Add Project Status response 2\", function () {",
									"    const responseJson = pm.response.json();",
									"    pm.expect(responseJson.data.project).to.be.not.equal(null);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "{{authToken}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"title\": \"New Status\",\n\t\"color\": \"#000000\",\n    \"project\": \"{{project}}\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{server}}/api/{{ver}}/statuses",
							"host": [
								"{{server}}"
							],
							"path": [
								"api",
								"{{ver}}",
								"statuses"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update Status",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Update Status status test\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Authorization",
								"value": "{{authToken}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n\t\"title\": \"Update New Status\",\n\t\"color\": \"#ffffff\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{server}}/api/{{ver}}/statuses/{{status}}",
							"host": [
								"{{server}}"
							],
							"path": [
								"api",
								"{{ver}}",
								"statuses",
								"{{status}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete Status",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Delete Status status test\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Authorization",
								"value": "{{authToken}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{server}}/api/{{ver}}/statuses/{{status}}",
							"host": [
								"{{server}}"
							],
							"path": [
								"api",
								"{{ver}}",
								"statuses",
								"{{status}}"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Members",
			"item": [
				{
					"name": "Add Project member/s",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "{{authToken}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{server}}/api/{{ver}}/projects/{{project}}/members",
							"host": [
								"{{server}}"
							],
							"path": [
								"api",
								"{{ver}}",
								"projects",
								"{{project}}",
								"members"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "People",
			"item": [
				{
					"name": "Add person",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "{{authToken}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{server}}/api/{{ver}}/people/{{document}}",
							"host": [
								"{{server}}"
							],
							"path": [
								"api",
								"{{ver}}",
								"people",
								"{{document}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update person",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Authorization",
								"value": "{{authToken}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{server}}/api/{{ver}}/person/123-123-123",
							"host": [
								"{{server}}"
							],
							"path": [
								"api",
								"{{ver}}",
								"person",
								"123-123-123"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete Person",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Authorization",
								"value": "{{authToken}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{server}}/api/{{ver}}/person/1234-12345-12334-12423",
							"host": [
								"{{server}}"
							],
							"path": [
								"api",
								"{{ver}}",
								"person",
								"1234-12345-12334-12423"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Notepad",
			"item": [
				{
					"name": "Update Notepad",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Authorization",
								"value": "{{authToken}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"content\": \"Hello world\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{server}}/api/{{ver}}/notepad/{{document}}",
							"host": [
								"{{server}}"
							],
							"path": [
								"api",
								"{{ver}}",
								"notepad",
								"{{document}}"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Search",
			"item": [
				{
					"name": "Search",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "{{authToken}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{server}}/api/{{ver}}/search?q=hello%20world",
							"host": [
								"{{server}}"
							],
							"path": [
								"api",
								"{{ver}}",
								"search"
							],
							"query": [
								{
									"key": "q",
									"value": "hello%20world"
								}
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Updates",
			"item": [
				{
					"name": "Get latest updates",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "{{authToken}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{server}}/api/{{ver}}/updates?since=100",
							"host": [
								"{{server}}"
							],
							"path": [
								"api",
								"{{ver}}",
								"updates"
							],
							"query": [
								{
									"key": "since",
									"value": "100"
								}
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Cleanup",
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{server}}/cleanup",
					"host": [
						"{{server}}"
					],
					"path": [
						"cleanup"
					]
				}
			},
			"response": []
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	]
}